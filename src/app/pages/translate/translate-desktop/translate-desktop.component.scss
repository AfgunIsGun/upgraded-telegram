@use '../../../../theme/breakpoints' as breakpoints;

.modern-header {
  ion-toolbar {
    --background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }

  .modern-title {
    font-weight: 600;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .modern-btn {
    --background: linear-gradient(135deg, var(--app-accent-color), var(--app-secondary-color));
    --background-hover: linear-gradient(135deg, var(--app-secondary-color), var(--app-accent-color));
    --box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;

    &:hover {
      transform: translateY(-1px);
      --box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    }

    ion-icon {
      margin-left: 8px;
      font-size: 16px;
    }
  }
}

@media #{breakpoints.$breakpoint-gt-xs} {
  .container::before {
    background-color: var(--app-tinted-background-color);
    border-bottom: 1px solid var(--app-divider-color);
    content: '';
    display: block;
    height: 106px;
    width: 100%;
    position: absolute;
    z-index: -1;
    left: 0;
  }
}

.container {
  transition: 0.6s all cubic-bezier(0.4, 0, 0.2, 1);

  @media #{breakpoints.$breakpoint-gt-md} {
    padding: 48px;
    padding-top: 0;
  }

  #input-mode-group {
    height: 68px;
    font-family: 'Google Sans', Roboto, Arial, sans-serif;
    align-items: center;
    display: flex;
    gap: 0.5em;
    position: relative;
    overflow: hidden;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      animation: shimmer 3s infinite;
    }

    @media #{breakpoints.$breakpoint-lt-lg} {
      padding: 0 12px;
    }

    @media #{breakpoints.$breakpoint-lt-sm} {
      display: none;
    }

    app-translate-input-button {
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      
      &:hover {
        transform: translateY(-2px) scale(1.02);
      }

      &:active {
        transform: translateY(0) scale(0.98);
      }
    }
  }

  #translation-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    width: 100%;
    height: 100%;
    transition: 0.6s all cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 
      0 20px 40px rgba(0, 0, 0, 0.1),
      0 0 0 1px rgba(255, 255, 255, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.3);

    @media (prefers-color-scheme: dark) {
      background: rgba(16, 16, 16, 0.9);
      backdrop-filter: blur(20px);
      box-shadow: 
        0 20px 40px rgba(0, 0, 0, 0.3),
        0 0 0 1px rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    @media #{breakpoints.$breakpoint-gt-xs} {
      box-shadow: 
        0 25px 50px rgba(0, 0, 0, 0.15),
        0 0 0 1px rgba(255, 255, 255, 0.2);
    }

    @media #{breakpoints.$breakpoint-gt-md} {
      border-radius: 16px;
      overflow: hidden;
    }

    app-language-selectors {
      border-bottom: 1px solid var(--app-divider-color);
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
    }

    &:hover {
      transform: translateY(-2px);
      box-shadow: 
        0 30px 60px rgba(0, 0, 0, 0.2),
        0 0 0 1px rgba(255, 255, 255, 0.3);
    }
  }
}

ntkme-github-button {
  margin: 0 8px;
}

#version {
  cursor: help;
  font-family: monospace;
}


@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

// Floating particles animation
.container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  background-image: 
    radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 2px, transparent 2px),
    radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 200px 200px, 150px 150px, 100px 100px;
  animation: float 20s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-10px) rotate(1deg);
  }
  66% {
    transform: translateY(5px) rotate(-1deg);
  }
}

